name: e2e-tests

on:
  push:
    branches:
      - main
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+*'
  pull_request:

jobs:
  build-auto-instrumentation:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Build auto-instrumentation
        run: |
          IMG=otel-go-instrumentation:latest make docker-build
          docker save otel-go-instrumentation:latest -o otel-go-instrumentation.tar
      - name: Upload Docker image artifact
        uses: actions/upload-artifact@v4
        with:
          name: otel-go-instrumentation
          path: otel-go-instrumentation.tar
  build-sample-apps:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        library: ["autosdk", "nethttp", "nethttp_custom", "gin", "databasesql", "grpc", "otelglobal", "kafka-go"]
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Build Image From Script
        if: ${{ hashFiles(format('internal/test/e2e/{0}/build.sh', matrix.library)) != '' }}
        run: ./internal/test/e2e/${{ matrix.library }}/build.sh -t sample-app-${{ matrix.library }}
      - name: Build Image
        if: ${{ hashFiles(format('internal/test/e2e/{0}/build.sh', matrix.library)) == '' }}
        working-directory: ./internal/test/e2e/${{ matrix.library }}
        run: docker build -t sample-app-${{ matrix.library }} .
      - name: Save Image
        run: docker save sample-app-${{ matrix.library }}:latest -o sample-app-${{ matrix.library }}.tar
      - name: Upload Docker image artifact
        uses: actions/upload-artifact@v4
        with:
          name: sample-app-${{ matrix.library }}
          path: sample-app-${{ matrix.library }}.tar
  kubernetes-test:
    needs:
      - build-auto-instrumentation
      - build-sample-apps
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Setup BATS
        uses: mig4/setup-bats@v1
      - name: Set up Helm
        uses: azure/setup-helm@v4
      - name: Create kind cluster
        uses: helm/kind-action@v1.10.0
      - name: Check kind
        run: |
          kubectl cluster-info --context kind-chart-testing
          kubectl get node
          docker ps -a --filter label=io.x-k8s.kind.cluster=chart-testing
      - name: Download Instrumentation Docker Image Artifact
        uses: actions/download-artifact@v4
        with:
          name: otel-go-instrumentation
      - name: Load Docker image
        run: |
          docker load -i otel-go-instrumentation.tar
      - name: Kind load images
        run: |
          kind load docker-image otel-go-instrumentation --name chart-testing
      - name: Add Dependencies
        shell: bash
        run: helm repo add open-telemetry https://open-telemetry.github.io/opentelemetry-helm-charts
      - uses: actions/checkout@v4
        with:
          repository: 'open-telemetry/opentelemetry-helm-charts'
          path: opentelemetry-helm-charts
      - name: Run workflow for autosdk
        uses: ./.github/workflows/run-e2e.yml
        with:
          name: autosdk
      - name: Run workflow for nethttp
        uses: ./.github/workflows/run-e2e.yml
        with:
          name: nethttp
      - name: Run workflow for nethttp_custom
        uses: ./.github/workflows/run-e2e.yml
        with:
          name: nethttp_custom
      - name: Run workflow for gin
        uses: ./.github/workflows/run-e2e.yml
        with:
          name: gin
      - name: Run workflow for databasesql
        uses: ./.github/workflows/run-e2e.yml
        with:
          name: databasesql
      - name: Run workflow for grpc
        uses: ./.github/workflows/run-e2e.yml
        with:
          name: grpc
      - name: Run workflow for otelglobal
        uses: ./.github/workflows/run-e2e.yml
        with:
          name: otelglobal
      - name: Run workflow for kafka-go
        uses: ./.github/workflows/run-e2e.yml
        with:
          name: kafka-go
