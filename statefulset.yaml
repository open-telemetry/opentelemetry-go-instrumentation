apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
    meta.helm.sh/release-name: artifactory
    meta.helm.sh/release-namespace: artifactory
  creationTimestamp: "2022-02-05T13:27:37Z"
  generation: 1
  labels:
    app: artifactory
    app.kubernetes.io/managed-by: Helm
    chart: artifactory-107.31.10
    component: artifactory
    heritage: Helm
    release: artifactory
  name: artifactory
  namespace: artifactory
  uid: 0f0539a6-fc14-4517-97ad-16f69b24808d
spec:
  podManagementPolicy: OrderedReady
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: artifactory
      release: artifactory
      role: artifactory
  serviceName: artifactory
  template:
    metadata:
      annotations:
        checksum/access-config: 2292022473e87deb13d49c3c6bbc9017e805cae4dd726562e4c694e6e4813860
        checksum/admin-creds: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
        checksum/binarystore: 8f5857549d9c5927e4ffd0d019c34c7b2c3b341722f944bd325c9ffa30f1b280
        checksum/database-secrets: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
        checksum/systemyaml: b041857c4b5e4822152b45b8970e75e3033e2a9c1a12b58f72f680a7621bbce3
      creationTimestamp: null
      labels:
        app: artifactory
        chart: artifactory-107.31.10
        component: artifactory
        heritage: Helm
        release: artifactory
        role: artifactory
    spec:
      shareProcessNamespace: true
      containers:
      - command:
        - /bin/bash
        - -c
        - |
          exec /opt/jfrog/router/app/bin/entrypoint-router.sh
        env:
        - name: JF_ROUTER_TOPOLOGY_LOCAL_REQUIREDSERVICETYPES
          value: jfrt,jfac,jfmd,jffe,jfevt,jfob,jfint
        image: releases-docker.jfrog.io/jfrog/router:7.28.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 10
          httpGet:
            path: /router/api/v1/system/liveness
            port: 8082
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: router
        ports:
        - containerPort: 8082
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 10
          httpGet:
            path: /router/api/v1/system/readiness
            port: 8082
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - NET_RAW
          runAsNonRoot: true
        startupProbe:
          failureThreshold: 60
          httpGet:
            path: /router/api/v1/system/readiness
            port: 8082
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 1
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/opt/jfrog/router
          name: artifactory-volume
      - command:
        - /bin/bash
        - -c
        - |
          exec /opt/jfrog/artifactory/app/third-party/node/bin/node /opt/jfrog/artifactory/app/frontend/bin/server/dist/startup.js /opt/jfrog/artifactory/app/frontend start
        env:
        - name: JF_SHARED_NODE_ID
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        image: releases-docker.jfrog.io/jfrog/artifactory-pro:7.31.10
        imagePullPolicy: IfNotPresent
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - curl --fail --max-time 1 http://localhost:8070/api/v1/system/liveness
          failureThreshold: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        name: frontend
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - NET_RAW
          runAsNonRoot: true
        startupProbe:
          exec:
            command:
            - sh
            - -c
            - curl --fail --max-time 1 http://localhost:8070/api/v1/system/readiness
          failureThreshold: 90
          initialDelaySeconds: 30
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 5
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/opt/jfrog/artifactory
          name: artifactory-volume
      - command:
        - /bin/bash
        - -c
        - |
          exec /opt/jfrog/artifactory/app/metadata/bin/jf-metadata start
        env:
        - name: JF_SHARED_NODE_ID
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: JF_SHARED_DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              key: postgresql-password
              name: artifactory-postgresql
        image: releases-docker.jfrog.io/jfrog/artifactory-pro:7.31.10
        imagePullPolicy: IfNotPresent
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - curl --fail --max-time 1 http://localhost:8086/api/v1/system/liveness
          failureThreshold: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        name: metadata
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - NET_RAW
          runAsNonRoot: true
        startupProbe:
          exec:
            command:
            - sh
            - -c
            - curl --fail --max-time 1 http://localhost:8086/api/v1/system/readiness
          failureThreshold: 90
          initialDelaySeconds: 30
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 5
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/opt/jfrog/artifactory
          name: artifactory-volume
      - command:
        - /bin/bash
        - -c
        - |
          exec /opt/jfrog/artifactory/app/event/bin/jf-event start
        env:
        - name: JF_SHARED_NODE_ID
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        image: releases-docker.jfrog.io/jfrog/artifactory-pro:7.31.10
        imagePullPolicy: IfNotPresent
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - curl --fail --max-time 1 http://localhost:8061/api/v1/system/liveness
          failureThreshold: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        name: event
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - NET_RAW
          runAsNonRoot: true
        startupProbe:
          exec:
            command:
            - sh
            - -c
            - curl --fail --max-time 1 http://localhost:8061/api/v1/system/readiness
          failureThreshold: 90
          initialDelaySeconds: 30
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 5
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/opt/jfrog/artifactory
          name: artifactory-volume
      - command:
        - /bin/bash
        - -c
        - |
          exec /opt/jfrog/artifactory/app/integration/bin/jf-integration start
        env:
        - name: JF_SHARED_NODE_ID
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        image: releases-docker.jfrog.io/jfrog/artifactory-pro:7.31.10
        imagePullPolicy: IfNotPresent
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - curl --fail --max-time 1 http://localhost:8071/api/v1/system/liveness
          failureThreshold: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        name: integration
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - NET_RAW
          runAsNonRoot: true
        startupProbe:
          exec:
            command:
            - sh
            - -c
            - curl --fail --max-time 1 http://localhost:8071/api/v1/system/readiness
          failureThreshold: 90
          initialDelaySeconds: 30
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 5
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/opt/jfrog/artifactory
          name: artifactory-volume
      - image: dev/bpftest:latest
        imagePullPolicy: Never
        name: observability-instrumentation
        env:
        - name: OTEL_TARGET_EXE
          value: /opt/jfrog/artifactory/app/observability/bin/jf-observability
        - name: OTEL_EXPORTER_OTLP_ENDPOINT
          value: "collector.keyval-system:4317"
        - name: OTEL_SERVICE_NAME
          value: "observabibibib"
        securityContext:
          runAsUser: 0
          capabilities:
            add:
            - SYS_PTRACE
          privileged: true
        volumeMounts:
          - mountPath: /sys/kernel/debug
            name: kernel-debug
      - command:
        - /bin/bash
        - -c
        - |
          exec /opt/jfrog/artifactory/app/observability/bin/jf-observability start
        env:
        - name: JF_SHARED_NODE_ID
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        image: releases-docker.jfrog.io/jfrog/artifactory-pro:7.31.10
        imagePullPolicy: IfNotPresent
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - curl --fail --max-time 1 http://localhost:8036/api/v1/system/liveness
          failureThreshold: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        name: observability
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - NET_RAW
          runAsNonRoot: true
        startupProbe:
          exec:
            command:
            - sh
            - -c
            - curl --fail --max-time 1 http://localhost:8036/api/v1/system/readiness
          failureThreshold: 90
          initialDelaySeconds: 30
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 5
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/opt/jfrog/artifactory
          name: artifactory-volume
      - command:
        - /bin/bash
        - -c
        - |
          set -e; if [ -d /artifactory_extra_conf ] && [ -d /artifactory_bootstrap ]; then
            echo "Copying bootstrap config from /artifactory_extra_conf to /artifactory_bootstrap";
            cp -Lrfv /artifactory_extra_conf/ /artifactory_bootstrap/;
          fi; exec /entrypoint-artifactory.sh
        env:
        - name: JF_ROUTER_ENABLED
          value: "true"
        - name: JF_ROUTER_SERVICE_ENABLED
          value: "false"
        - name: JF_EVENT_ENABLED
          value: "false"
        - name: JF_METADATA_ENABLED
          value: "false"
        - name: JF_FRONTEND_ENABLED
          value: "false"
        - name: JF_REPLICATOR_ENABLED
          value: "true"
        - name: JF_REPLICATOR_PDN_TRACKER_ENABLED
          value: "true"
        - name: JF_REPLICATOR_SERVICE_ENABLED
          value: "false"
        - name: JF_OBSERVABILITY_ENABLED
          value: "false"
        - name: JF_JFCONNECT_ENABLED
          value: "false"
        - name: JF_INTEGRATION_ENABLED
          value: "false"
        - name: JF_SHARED_DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              key: postgresql-password
              name: artifactory-postgresql
        image: releases-docker.jfrog.io/jfrog/artifactory-pro:7.31.10
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 10
          httpGet:
            path: /artifactory/api/v1/system/liveness
            port: 8081
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        name: artifactory
        ports:
        - containerPort: 8082
          name: http
          protocol: TCP
        - containerPort: 8081
          name: http-internal
          protocol: TCP
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - NET_RAW
          runAsNonRoot: true
        startupProbe:
          failureThreshold: 90
          httpGet:
            path: /artifactory/api/v1/system/readiness
            port: 8081
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 5
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/opt/jfrog/artifactory
          name: artifactory-volume
        - mountPath: /artifactory_bootstrap/binarystore.xml
          name: binarystore-xml
          subPath: binarystore.xml
        - mountPath: /artifactory_bootstrap/info/installer-info.json
          name: installer-info
          subPath: installer-info.json
      dnsPolicy: ClusterFirst
      initContainers:
      - command:
        - bash
        - -c
        - rm -fv /var/opt/jfrog/artifactory/etc/db.properties
        image: releases-docker.jfrog.io/jfrog/ubi-minimal:8.5-204
        imagePullPolicy: IfNotPresent
        name: delete-db-properties
        resources:
          limits:
            cpu: "1"
            memory: 1Gi
          requests:
            cpu: 10m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - NET_RAW
          runAsNonRoot: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/opt/jfrog/artifactory
          name: artifactory-volume
      - command:
        - bash
        - -c
        - rm -rfv /var/opt/jfrog/artifactory/lost+found /var/opt/jfrog/artifactory/data/.lock
        image: releases-docker.jfrog.io/jfrog/ubi-minimal:8.5-204
        imagePullPolicy: IfNotPresent
        name: remove-lost-found
        resources:
          limits:
            cpu: "1"
            memory: 1Gi
          requests:
            cpu: 10m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - NET_RAW
          runAsNonRoot: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/opt/jfrog/artifactory
          name: artifactory-volume
      - command:
        - /bin/bash
        - -c
        - |
          if [[ -e "/var/opt/jfrog/artifactory/etc/filebeat.yaml" ]]; then chmod 644 /var/opt/jfrog/artifactory/etc/filebeat.yaml; fi; echo "Copy system.yaml to /var/opt/jfrog/artifactory/etc"; mkdir -p /var/opt/jfrog/artifactory/etc; mkdir -p /var/opt/jfrog/artifactory/etc/access/keys/trusted; cp -fv /tmp/etc/system.yaml /var/opt/jfrog/artifactory/etc/system.yaml; echo "Remove /var/opt/jfrog/artifactory/lost+found folder if exists"; rm -rfv /var/opt/jfrog/artifactory/lost+found; echo "Copy access.config.patch.yml to /var/opt/jfrog/artifactory/etc/access"; mkdir -p /var/opt/jfrog/artifactory/etc/access; cp -fv /tmp/etc/access.config.patch.yml /var/opt/jfrog/artifactory/etc/access/access.config.patch.yml; echo "Copy joinKey to /var/opt/jfrog/artifactory/bootstrap/access/etc/security"; mkdir -p /var/opt/jfrog/artifactory/bootstrap/access/etc/security; echo -n ${ARTIFACTORY_JOIN_KEY} > /var/opt/jfrog/artifactory/bootstrap/access/etc/security/join.key; echo "Copy masterKey to /var/opt/jfrog/artifactory/etc/security"; mkdir -p /var/opt/jfrog/artifactory/etc/security; echo -n ${ARTIFACTORY_MASTER_KEY} > /var/opt/jfrog/artifactory/etc/security/master.key;
        env:
        - name: ARTIFACTORY_JOIN_KEY
          valueFrom:
            secretKeyRef:
              key: join-key
              name: artifactory
        - name: ARTIFACTORY_MASTER_KEY
          valueFrom:
            secretKeyRef:
              key: master-key
              name: artifactory
        image: releases-docker.jfrog.io/jfrog/ubi-minimal:8.5-204
        imagePullPolicy: IfNotPresent
        name: copy-system-yaml
        resources:
          limits:
            cpu: "1"
            memory: 1Gi
          requests:
            cpu: 10m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - NET_RAW
          runAsNonRoot: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/opt/jfrog/artifactory
          name: artifactory-volume
        - mountPath: /tmp/etc/system.yaml
          name: systemyaml
          subPath: system.yaml
        - mountPath: /tmp/etc/access.config.patch.yml
          name: access-config
          subPath: access.config.patch.yml
      - command:
        - /bin/bash
        - -c
        - "echo \"Waiting for postgresql to come up\"\nready=false;\nwhile ! $ready;
          do echo waiting;\n  timeout 2s bash -c \"</dev/tcp/artifactory-postgresql/5432\";
          exit_status=$?;\n  if [[ $exit_status -eq 0 ]]; then ready=true; echo \"database
          ok\"; fi; sleep 1; \ndone\n"
        image: releases-docker.jfrog.io/jfrog/ubi-minimal:8.5-204
        imagePullPolicy: IfNotPresent
        name: wait-for-db
        resources:
          limits:
            cpu: "1"
            memory: 1Gi
          requests:
            cpu: 10m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - NET_RAW
          runAsNonRoot: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      - command:
        - /bin/bash
        - -c
        - |
          scriptsPath="/opt/jfrog/artifactory/app/bin"; mkdir -p $scriptsPath; echo "Copy migration scripts and Run migration"; cp -fv /tmp/migrate.sh $scriptsPath/migrate.sh; cp -fv /tmp/migrationHelmInfo.yaml $scriptsPath/migrationHelmInfo.yaml; cp -fv /tmp/migrationStatus.sh $scriptsPath/migrationStatus.sh; mkdir -p /var/opt/jfrog/artifactory/log; bash $scriptsPath/migrationStatus.sh 7.31.10 3600 > >(tee /var/opt/jfrog/artifactory/log/helm-migration.log) 2>&1;
        env:
        - name: JF_SHARED_DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              key: postgresql-password
              name: artifactory-postgresql
        image: releases-docker.jfrog.io/jfrog/artifactory-pro:7.31.10
        imagePullPolicy: IfNotPresent
        name: migration-artifactory
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - NET_RAW
          runAsNonRoot: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /tmp/migrate.sh
          name: migration-scripts
          subPath: migrate.sh
        - mountPath: /tmp/migrationHelmInfo.yaml
          name: migration-scripts
          subPath: migrationHelmInfo.yaml
        - mountPath: /tmp/migrationStatus.sh
          name: migration-scripts
          subPath: migrationStatus.sh
        - mountPath: /var/opt/jfrog/artifactory
          name: artifactory-volume
        - mountPath: /artifactory_bootstrap/binarystore.xml
          name: binarystore-xml
          subPath: binarystore.xml
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 1030
        runAsUser: 1030
      serviceAccount: default
      serviceAccountName: default
      terminationGracePeriodSeconds: 30
      volumes:
      - name: kernel-debug
        hostPath:
          path: /sys/kernel/debug
      - name: binarystore-xml
        secret:
          defaultMode: 420
          secretName: artifactory-binarystore
      - configMap:
          defaultMode: 420
          name: artifactory-migration-scripts
        name: migration-scripts
      - configMap:
          defaultMode: 420
          name: artifactory-installer-info
        name: installer-info
      - name: systemyaml
        secret:
          defaultMode: 420
          secretName: artifactory-systemyaml
      - name: access-config
        secret:
          defaultMode: 420
          secretName: artifactory-access-config
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      name: artifactory-volume
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 20Gi
      volumeMode: Filesystem
    status:
      phase: Pending
status:
  collisionCount: 0
  currentReplicas: 1
  currentRevision: artifactory-544b46bc89
  observedGeneration: 1
  readyReplicas: 1
  replicas: 1
  updateRevision: artifactory-544b46bc89
  updatedReplicas: 1
